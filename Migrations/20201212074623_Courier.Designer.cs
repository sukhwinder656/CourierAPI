// <auto-generated />
using CourierAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourierAPI.Migrations
{
    [DbContext(typeof(CourierDBContext))]
    [Migration("20201212074623_Courier")]
    partial class Courier
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CourierAPI.Models.Courier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FromAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Insured")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("ToAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Couriers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FromAddress = "111, Sector 11, chandigarh",
                            FromContactNumber = "9876543210",
                            FromName = "Ravi Sharma",
                            Insured = "Yes",
                            LocationId = 1,
                            ToAddress = "1232/A, Pahadganj, New Delhi",
                            ToContactNumber = "011-4345632",
                            ToName = "Saroj Sharma"
                        });
                });

            modelBuilder.Entity("CourierAPI.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Chandigarh"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Delhi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Amritsar"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Shimla"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Mohali"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Panchkula"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Manali"
                        });
                });

            modelBuilder.Entity("CourierAPI.Models.Courier", b =>
                {
                    b.HasOne("CourierAPI.Models.Location", "Location")
                        .WithMany("couriers")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
